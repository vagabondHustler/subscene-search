name: Publish release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  # get the current version, update version.json in ../data with new version with pushed tags
  semantic-versioning:
    name: Semantic versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"
      # import GPG key for verified commits
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      # install jq to reading/writing .json files
      - name: Install jq
        run: sudo apt install jq
      # read version.json in ../data, save as variable version_output
      - name: Get current version
        id: current_version
        run: |
          echo "::set-output name=version_output::$(echo "`jq '.version' src/subsearch/data/version.json`")"
      # write pushed tags as version number into version.json in ../data
      - name: Set new version
        run: echo "`jq '.version="${{ github.ref_name }}"' src/subsearch/data/version.json`" > src/subsearch/data/version.json
      - name: Update __version__.py
        run: python .github/workflows/_set__version__.py
      # commit version.json in ../data, with msg Bump version from vx.x.x to vx.x.x in /data
      - name: Commit version.json
        run: |
          git pull origin main
          git add src/subsearch/data/version.json
          git add src/subsearch/data/__version__.py
          git commit -S -m "Bump version from ${{steps.current_version.outputs.version_output}} -> ${{ github.ref_name }} in /data"
          git push origin main

  # build and publish release with pushed tags as release name
  build-and-publish:
    name: Build and publish
    runs-on: windows-latest
    needs: semantic-versioning
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"
      # pull main so everything is up to date
      - name: Pull main
        run: git pull origin main
      # install pyinstaller and requirements
      - name: Initializing
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      # copy source code to workflows
      - name: Copy source to .github/workflows/subsearch
        run: cp -r ./src/subsearch/ .github/workflows/subsearch/
      # build the executable and manually add sv_ttk otherwise it wont be included
      - name: Build executable
        run: |
          pyinstaller .github/workflows/build.spec -y --clean --distpath ./SubSearch-x64
          cp -r C:/hostedtoolcache/windows/Python/3.10.5/x64/lib/site-packages/sv_ttk/ ./SubSearch-x64/SubSearch/sv_ttk
      # make archives for publishing
      - name: Make archives
        run: |
          python .github/workflows/_make_archive.py
          mv ./SubSearch-x64.zip ./SubSearch-${{ github.ref_name }}-win-x64.zip
          mv ./SubSearch-source.zip ./SubSearch-${{ github.ref_name }}-win-source.zip
      # publish the release with ACTION_TOKEN for verified release
      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          generate_release_notes: True
          files: |
            SubSearch-${{ github.ref_name }}-win-x64.zip
            SubSearch-${{ github.ref_name }}-win-source.zip
